name: testing
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    # TODO: add cypress tests in ci
    steps:
      # prepare reports
      - name: Checkout
        uses: actions/checkout@v3
      - name: Make dir from commit hash
        run: mkdir -p reports/${{ github.sha }}
      - name: Copy report index.html
        run: cp reports/templates/index.html reports/${{ github.sha }}/index.html
      - name: Upload created folder
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: reports
      # prepare tests
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Starting Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - name: Install modules
        run: npm ci
      # run unit tests
      - name: Unit testing
        run: npm run test:unit
        if: always()
      - name: Move unit report
        run: mkdir -p reports/${{ github.sha }}/unit/; mv reports/templates/unit/* $_
        if: always()
      # # run ui tests
      # - name: Screenshot testing
      #   run: npm run test:ui:ci
      #   if: always()
      # - name: Generate HTML report
      #   run: npm run test:ui:report
      #   if: always()
      # - name: Move loki report
      #   run: mkdir -p reports/${{ github.sha }}/ui; mv .loki/* $_
      #   if: always()
      # upload reports
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports
          path: reports

  report:
    needs: tests
    if: always()
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    env:
      url: ${{ vars.REPORTS_WEBSITE_URL }}/${{ github.sha }}
    environment:
      name: github-pages
      url: ${{ env.URL }}
    steps:
      - name: Load secret
        uses: 1password/load-secrets-action@v1
        with:
          # Export loaded secrets as environment variables
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          KEY: 'op://online-store/Time4vps demian key/private key'

      - name: Download reports artifact
        uses: actions/download-artifact@v3
        with:
          name: reports
          path: reports

      - name: List reports directory
        run: ls

      - name: Upload report
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ env.KEY }}
          source: 'reports/*'
          target: '/var/www/reports.mybrandview.co.uk/html/${{ github.sha }}'

      - name: Output
        run: printf "# Report \nReport is deployed to ${{ env.URL }}" >> $GITHUB_STEP_SUMMARY
