name: testing
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit:
    runs-on: ubuntu-latest
    # TODO: add cypress tests in ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Starting Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - name: Install modules
        run: npm ci
      - name: Unit testing
        run: npm run test:unit
        if: always()
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: unit-report
          path: reports/templates/unit
  ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Starting Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}
      - name: Screenshot testing
        run: npm run test:ui:ci
        if: always()
      - name: Generate HTML report
        run: npm run test:ui:report
        if: always()
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: loki-report
          path: .loki

  report:
    needs: [unit]
    if: always()
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ vars.REPORTS_WEBSITE_URL }}/${{ github.sha }}
    steps:
      - name: Load secret
        uses: 1password/load-secrets-action@v1
        with:
          # Export loaded secrets as environment variables
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          KEY: 'op://online-store/Time4vps demian key/private key'

      - name: Checkout
        uses: actions/checkout@v3
      - name: Copy report index.html
        run: cp reports/templates/index.html reports/${{ github.sha }}/index.html

      - name: Make dir from commit hash
        run: mkdir -p reports/${{ github.sha }}

      - name: Download unit report artifact
        uses: actions/download-artifact@v3
        with:
          name: unit-report
          path: reports/${{ github.sha }}/unit

      # - name: Download ui report artifact
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: loki-report
      #     path: reports/${{ github.sha }}/unit

      - name: Upload report
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          key: ${{ env.KEY }}
          source: 'reports/*'
          target: '/var/www/reports.mybrandview.co.uk/html'

      - name: Output
        run: printf "# Report \nReport is deployed to ${{ vars.REPORTS_WEBSITE_URL }}/${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
