name: testing
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/checkout@v3
      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install modules
        run: npm ci
      - name: Unit testing
        run: npm run test:unit

  ui:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/checkout@v3
      - name: Starting Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install modules
        run: npm ci
      - name: Install GraphicsMagick Engine
        run: sudo apt-get install -y graphicsmagick
      - name: Screenshot testing
        run: npm run test:ui:ci
      - name: Generate HTML report
        run: npm run test:ui:report
        if: always()
      - name: Setup Pages
        uses: actions/configure-pages@v3
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        if: always()
        with:
          path: '.loki'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v2
#      - name: Generate HTML report
#        run: npm run test:ui:report
#        if: failure()
#      - name: Setup Pages
#        uses: actions/configure-pages@v3
#        if: failure()
#      - name: Upload difference folder
#        if: failure()
#        uses: actions/upload-artifact@v3
#        with:
#          path: .loki
#      - name: Deploy to GitHub Pages
#        id: deployment
#        if: failure()
#        uses: actions/deploy-pages@v2
